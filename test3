{
    matrix<float> A [3][3] := [[1,2,3],[1.2,2,3.4],[1e2,2e3,3e4]];
    vector<float> b[3];

    for (int i := 0; i < 3; i := i + 1)
    {
        b[i] := A[0][i];
    };

    vector<int> A_len[2] := dim(A);
    float Det := 0;

    for (int i := 0; i < A_len[0]; i := i + 1)
    {
        for (int j := 0; j < A_len[0]; j := j + 1)
        {
            for (int k := 0; k < A_len[0]; k := k + 1)
            {
                if (i=/= j  &  j =/= k & k=/=i)
                Det := Det + A[0][i]*((i mod 2)*2 + -1) + A[1][j]*((j mod 2)*2 + -1) +  A[2][k]*((k mod 2)*2 + -1);
                else ;
            };
        };
    };

    if (Det=/=0.0)
    {
        matrix<float> A_Adj [3][3] := [[0,0,0],[0,0,0],[0,0,0]];
        for (int i := 0; i < A_len[0]; i := i + 1)
        {
            for (int j := 0; j < A_len[0]; j := j + 1)
            {
                int p_eff := 0;
                int q_eff := 0;
                matrix<float> minor_ij [2][2] := [[0,0],[0,0]];
                for (int p := 0; p < A_len[0]; p := p + 1)
                {
                    if (p=/=i)
                    {
                        p_eff := p_eff + 1;
                        for (int q := 0; q < A_len[0]; q := q + 1)
                        {
                            if (q=/=j)
                            {
                                q_eff := q_eff + 1;
                                minor_ij[p_eff][q_eff] := A[p][q];
                            } else;
                        };
                    } else ;
                };

                float minor_det := minor_ij[0][0]*minor_ij[1][1] - minor_ij[1][0]*minor_ij[0][1];
                A_Adj[i][j] := (-1)^(i+j)*minor_det;
            };
        };

        for (int i := 0; i < A_len[0]; i := i + 1)
        {
            for (int j := i; j < A_len[0]; j := j + 1)
            {
                A_Adj[i][j] := A_Adj[j][i];
            };
        };

        matrix<float> A_Inv [3][3] := (1/Det)*A_Adj;

        vector<float> Out[3] := [0,0,0];
        for (int i := 0; i < 3; i:=i+1)
        {
            `int sum:=0`
            for (int j := 0; j < 3; j:=j+1)
            {
                Out[i]:=Out[i] + A_Inv[i][j]*b[j];
            };
        };

    } else ;


}